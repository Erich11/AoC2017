
ADVENT
	// siehe adventofcode.com
2017

FileIn(name)
	S file = ##class(%File).%New("\\leo\trans\dre\advent\day"_name_".csv")
	Do file.Open("RS")
	Q

	// 01.12.2017
1(in)	// Reverse Captcha
	S in = "494751136895345894732582362629576539599184296195318162664695189393364372585778868512194863927652788149779748657989318645936221887731542718562643272683862627537378624843614831337441659741281289638765171452576466381314558821636595394981788588673443769343597851883955668818165723174939893841654914556681324133667446412138511724424292394454166623639872425168644336248217213826339741267546823779383343362789527461579565822966859349777937921933694912369552152772735167832762563719664315456987186713541153781499646178238762644186484381142249926194743713139262596264878458636595896487362658672224346241358667234115974528626523648311919886566497837217169673923935143386823757293148719377821517314629812886912412829924484513493885672343964151252433622341141661523814465991516961684511941471572895453711624986269342398786175846925783918686856442684489873327497698963658862856336682422797551251489126661954848572297228765445646745256499679451426358865477844467458533962981852292513358871483321161973583245698763531598395467675529181496911117769834127516441369261275244225978893617456524385518493112272169767775861256649728253754964675812534546226295535939697352141217337346738553495616832783757866928174519145357234834584788253893618549484385733283627199445369658339175644484859385884574943219267922729967571943843794565736975716174727852348441254492886794362934343868643337828637454277582276962353246357835493338372219824371517526474283541714897994127864461433627894831268659336264234436872715374727211764167739169341999573855627775114848275268739159272518673316753672995297888734844388928439859359992475637439771269232916542385876779616695129412366735112593669719335783511355773814685491876721452994714318863716542473187246351548626157775143333161422867924437526253865859969947366972895674966845993244925218766937543487875485647329995285821739359369998935331986126873726737672159265827566443794515755939813676194755474477224152139987944419463371386499841415227734673733555261543871359797796529847861748979527579985757964742667473767269248335229836818297477665453189662485548925521497365877771665365728224394427883312135322325169141784"
	S in = in_$E(in), out=0
	F i=1:1:$L(in)-1 S:$E(in,i)=$E(in,i+1) out=out+$E(in,i)
	Q out
2(in)
	S in = "494751136895345894732582362629576539599184296195318162664695189393364372585778868512194863927652788149779748657989318645936221887731542718562643272683862627537378624843614831337441659741281289638765171452576466381314558821636595394981788588673443769343597851883955668818165723174939893841654914556681324133667446412138511724424292394454166623639872425168644336248217213826339741267546823779383343362789527461579565822966859349777937921933694912369552152772735167832762563719664315456987186713541153781499646178238762644186484381142249926194743713139262596264878458636595896487362658672224346241358667234115974528626523648311919886566497837217169673923935143386823757293148719377821517314629812886912412829924484513493885672343964151252433622341141661523814465991516961684511941471572895453711624986269342398786175846925783918686856442684489873327497698963658862856336682422797551251489126661954848572297228765445646745256499679451426358865477844467458533962981852292513358871483321161973583245698763531598395467675529181496911117769834127516441369261275244225978893617456524385518493112272169767775861256649728253754964675812534546226295535939697352141217337346738553495616832783757866928174519145357234834584788253893618549484385733283627199445369658339175644484859385884574943219267922729967571943843794565736975716174727852348441254492886794362934343868643337828637454277582276962353246357835493338372219824371517526474283541714897994127864461433627894831268659336264234436872715374727211764167739169341999573855627775114848275268739159272518673316753672995297888734844388928439859359992475637439771269232916542385876779616695129412366735112593669719335783511355773814685491876721452994714318863716542473187246351548626157775143333161422867924437526253865859969947366972895674966845993244925218766937543487875485647329995285821739359369998935331986126873726737672159265827566443794515755939813676194755474477224152139987944419463371386499841415227734673733555261543871359797796529847861748979527579985757964742667473767269248335229836818297477665453189662485548925521497365877771665365728224394427883312135322325169141784"
	S l = $L(in) / 2, out=0
	F i=1:1:l S:$E(in,i)=$E(in,i+l) out=out+$E(in,i)
	Q out*2
	
	// 02.12.2017
3()	// Checksum first and last
	S checksum = 0
	S file = ##class(%File).%New("\\leo\trans\dre\advent\day2.csv")
	Do file.Open("RS")
	Do {
		K A
		S A=$LFS(file.ReadLine(),"	")
		S ptr=0 While $ListNext(A,ptr,v) { S A(v)="" }
		S checksum = checksum + $O(A(""),-1) - $O(A(""))		
	} While 'file.AtEnd
	Do file.Close()
	Q checksum
4()	// Checksum only two divisors
	S checksum = 0
	D FileIn("2")
	Do {
		S A=$LFS(file.ReadLine(),"	")
		S found=0,c=0, e=$LL(A)
		F i=1:1:e { S a=$LG(A,i) F j=i+1:1:e { S b=$LG(A,j) S c=$S(a>b:a/b,1:b/a) If c'["." S found=1 w !,a,?10,b,?20,c,?30,checksum Q } Q:found }
		S checksum = checksum + c
	} While 'file.AtEnd
	Do file.Close()
	Q checksum
	
	// 03.12.2017
5(in)	// Spiral Memory - Manhattan Distance
	;S in = 325489
	S ebene = $ZSQR(in) + 1 / 2
	S ebene = $S(ebene#1=0:ebene-1,1:ebene\1)
	S start = (2*ebene-1)*(2*ebene-1)
	S diff = in - start While diff - (2*ebene) > 0 { S diff = diff - (2*ebene) }
	S steps = $Tr(ebene - diff,"-") + ebene
	Q steps

6(in)	// Spiral Stress Test
	//		All Subsequent Numbers in the Spiral are calculated by the sum of their adjacent numbers
	//	147	142	133	122	 59
	//	304	  5	  4	  2	 57
	//	330	 10	  1	  1	 54
	//	351	 11	 23	 25	 26
	//	362	747	806	...
	S ebene=1,x=0,y=0,mx=1,my=0,count=0
	S M(x,y)=1
	F i=1:1 {		
		S x=x+mx, y=y+my, count=count+1
		S M(x,y) = $G(M(x-1,y-1)) + $G(M(x-1,y)) + $G(M(x-1,y+1)) + $G(M(x,y-1)) + $G(M(x,y+1)) + $G(M(x+1,y-1)) + $G(M(x+1,y)) + $G(M(x+1,y+1))
		
		S:i=((2*ebene-1)*(2*ebene-1)) ebene=ebene+1, count=1, mx=0, my=1
		S:count=(2*(ebene-1)) mx=-1,my=0
		S:count=(4*(ebene-1)) mx=0,my=-1
		S:count=(6*(ebene-1)) mx=1,my=0		
		
		Q:M(x,y)>in
	}
	W M(x,y)
	Q
	
	// 04.12.2017
7
	S valid=0
	D FileIn(4)
	While 'file.AtEnd {
		S A=file.ReadLine()
		Continue:A=""
		S A=$LFS(A," ")
		S dupe=0 F i=1:1:$LL(A) { If $LF(A,$LG(A,i),i) S dupe=1 Q }
		S:'dupe valid=valid+1
	}
	D file.Close()
	W valid
	Q
8
	S valid=0
	D FileIn(4)
	While 'file.AtEnd {
		S A=file.ReadLine()
		Continue:A=""
		S A=$LFS(A," ")
		F i=1:1:$LL(A) { K a,b S a = $LG(A,i) F j=1:1:$L(a) { S a($E(a,j))=$G(a($E(a,j)))_$E(a,j) } S c="" F { S c=$O(a(c),1,v) Q:c=""  S b=$G(b)_v } S $Li(A,i) = b }
		S dupe=0 F i=1:1:$LL(A) { If $LF(A,$LG(A,i),i) S dupe=1 Q }
		S:'dupe valid=valid+1
	}
	D file.Close()
	W valid
	Q

	// 05.12.2017
9	// Jump
	S in=""
	D FileIn(5)
	While 'file.AtEnd {
		S A=file.ReadLine()
		Continue:A=""
		S $Li(in,$LL(in)+1) = A
	}
	D file.Close()
	// Now to the jumps
	S pos = 1 F i=1:1 {
		S jump = $Li(in,pos)
		S $Li(in,pos) = jump + $S(jump>2: -1, 1: 1)
		S pos = pos + jump
		If $LG(in,pos)="" W i Q
	}
	Q
	// 06.12.2017
11	// Memory Reallocation
	S in = $LB(10,3,15,10,5,15,5,15,9,2,5,8,5,2,3,6)
	S L = $LL(in), loop=0
	S state($LTS(in))=""
	F i=1:1 {
		// Find highest number
		S high=0 F j=1:1:L { S:$LG(in,j)>high high=$LG(in,j), index=j }
		S $Li(in,index)=0 F j=1:1:high { S index = index+1 S:index>L index=1 S $Li(in,index) = $Li(in,index)+1 }
		
		If $D(state($LTS(in))) { If loop=0 { S loop=1,i=0 K state } Else { Q } }
		S state($LTS(in))=""
	}
	W i Q	
	
	// 07.12.2017
13	// Disc Tower
	S in=""
	S T=""
	D FileIn(7)
	While 'file.AtEnd {
		S A=file.ReadLine()
		Continue:A=""
		S a = $LFS($Tr(A,"(),")," ")
		S b = $LG(a,1)
		S T(b) = $LG(a,2)
		F i=4:1:$LL(a) { S T(b,$Li(a,i))="" }
	}

	// Sort the tower
	S a="" F { S a=$O(T(a)) Q:a=""
		
		S b="T("""")" F { S b=$Q(@b) Q:b=""
			S child = $Tr($P($P(b,"(",2),",",1),")""")	// Erster Index
			Continue:child=a
			S parent = $Tr($P(b,",",$L(b,",")),")""")
			S:$E(parent,1,2)="T(" parent=$E(parent,3,*)
			If a=parent {
				M @b = T(a)
				K T(a)
				Q
			}
		}
	}
	
	// Find the wrong weight, to do so we build sums of all trees
	
	// Step 1 - sorted array
	S a="T("""")" F { S a=$Q(@a) Q:a=""
		S level = $L(a,",") Continue:level=1
		S parent = $Tr($P($P(a,"(",2),",",level-1),"""")
		S child = $Tr($P(a,",",level),")""")
		S WE(child)=@a
		S W(level,parent,child)=@a
	}
	// Step 2 - iterate through sorted array and calculate weight
	S error=0,level="" F { S level=$O(W(level),-1) Q:level=""||error
		S parent="" F { S parent=$O(W(level,parent)) Q:parent=""||error
			K weight
			S child="" F { S child=$O(W(level,parent,child)) Q:child=""
				S weight(WE(child)) = $G(weight(WE(child)))+1
			}
			S w = $O(weight(""))
			If $O(weight(w))'="" {
				S error=1
				S wrongWeight = $S(weight(w)=1:w,1:$O(weight(w)))		// falsches Gewicht
				S correctWeight = $S(weight(w)'=1:w,1:$O(weight(w)))	// richtiges Gewicht
				S diff = correctWeight-wrongWeight
				S child="" F { S child=$O(W(level,parent,child)) Q:child=""
					Q:WE(child)=wrongWeight
				}
				S answer = W(level,parent,child) + diff
				W !,"Ebene: "_level, "   Parent: "_parent_"   Child: "_child
				W !,"Gewicht: "_W(level,parent,child)_"   Korrektes Gewicht: "_answer
			}
			Else {				
				S WE(parent) = WE(parent) + ( w * weight(w) )
			}
		}
	}	
	Q

	// 08.12.2017
15
	K
	S high = 0
	D FileIn(8)
	While 'file.AtEnd {
		S A=file.ReadLine() Continue:A=""
		S var = $P(A," ",1)
		S op  = $P(A," ",2)
		S val = $P(A," ",3)
		S con = $P(A,"if ",2)
		
		S con="+$G("_$P(con," ",1)_")"_$P(con," ",2,3)
		S con = $Tr($Replace(con,"==","="),"!","'")		
		S op = $S(op="inc":"+",1:"-")
		
		S X = "If ("_con_") S "_var_"=$G("_var_")"_op_val
		X X
		S register(var) = +$G(@var)
		S:$G(@var)>high high=@var
	}
	W !,high
	S high=0,v="" F { S v=$O(register(v),1,wert) Q:v=""
		S:wert>high high=wert }
	W !,high
	Q

	// 09.12.2017
17	// Stream
	S in = "{{{{{},{<>,<!!u'!!!>,,}!>$!!!!!>},<>}}},{{{{{{{<!>,<$}!i$!>},<a!!,<!>},<{oo<{!!$!>!a>},<$!!''!>},<!!!>!,ie!>,!!!>>}},{{}},{{{<!>},<{e!>,>,<!!e{,o}o$!>!>,<$${uu{!!'a>},<}a!!!!>},{{<,,ua$o!>!>,<!!a,>}},{{}}}},{{},{<!a{}<!>,<!>,<!!u>},{{},<i,ai'}!>},<!!!!!}e''!!!!{>}},{{{<!>!!,i!>},<u!!!>o$,<!!{a!!u'e!>},<,!>},<>},<>},{{<!>},<!>}}!!!>a!!u!!'!>,<aa!!,e>},{<!o!>},<}'u!!ii!>!!!>!!!>{<}!!!>!!<i!!}!!!>>}}}},{{{{{<i!$!!!!!>!}!!!>!>,<a$!>},<,!!!!i{>},<<!!!><!!!>'!!!>},<e!>e,!<{!>,<!a>},{<!a'i!>,<!'!!!>!>},<<i$>,<{o!uu!>},<{>},{{{{<ii!>${!>},<>},<o!>},<e!>!!!,>}},{{}},{<!u!>},<<u!!a!>ae,'u!!a!!uu<>,{}}}},{{{{<!>},<iu!>},<$o!>},<<!!$>},{{<e}!ioueoo!!!}<$}!>'!!$>}}},{{{{{<!!,,uuei!>$e>,<i!<!>!>o,!>!!!>!!!>'>},{{}},{{{<>},{<,,>}}}},{<e!,!,u!!!u!>},<u$i<!!}ii!ao>,{<uo>,{<>}}}}},{},{{{<,!u}o!>,<io!!!>a{!!a,!>},<!>},<!!!>o!!!>o>}}}},{{<i!euo!!a!>,<<<,}!!!>!'{>}}},{{{<!>o!>!!i}!!!>u!!!>!!<!!!!$e},>}},{{{<}<!!$a!>},<!>},<!!}<!<>},{{<$!>},<!!!>!>,u!!!>!!!>!>},<i}'{a!!,!!,e>}}},{}},{{{{{<e}ai<!a<>,{{<$!>>},{<!!$!!!,!!!!!>,<!!!!<!>e!!!>u!!!>!iu}>}}},{}},{{<$,!!!>a!!}!'a!!!>!!o!><!!u''!>},<>},{{<!>,<<!>i!>,<!>},<a!!!>{$<>}}},{{<e!a<,},>},{{{{<<>}},{},{{},{<!!!!!>'!!>,<o<<,!!!>},<u!!!>!!!o!{>},{{{<oiu}eae$!u!!!>!!!!>},{{<'o!>,<}u!!$!>>}}},{{},{{<<o>,{<!>!>,!!i!!oi!>,a!>$!>},<,>}},{<o!>,<!e}>}}},{{{{<!{u{{!!a>},<!!!>!!{u!!>},{{},<!!o$,{ui$eea'i!!!!e>}},<}!!!>auo!>!!!>},<!{!a'u,!!o>}}}},{},{<!>!!!!<e!!!>,>,{{<!>,iia!!!>!>,<!!!>!!,!>,}u<!a>}}}}}},{}}}},{{},{{<!>,<e!>,<!>!}!>$!>},<!!!>'!!o!!'>}},{{{{},<!>,<!>,<i$a,!!o!!a!>$!!i{u>},{{{{<i'i{u!!!!!>!>,<!!!>io!!!>!>,<aiu!,}>}},{<!!!!,!{!!,<!!!>,$u!i',o!$>,{<'$i!>,<e}!!!>!!!>,i}$e!!!!,!!!>ia'$>}}}},{{<!!!>a!!!>$a,oi!!'!!!>!>},<i>}}},{{},{<,,,}$!iu!>,<!{o!!u!>},<!eoi>}},{{{<ai'$i'!!!>a}$!!e<!!!!oia{o<>},<!i!>'}!>,<a!>,<!>!!!!!}!}}!>$io!>,<>},<!!!>e<}o$$>}},{}}}},{{{{{<a!>},<!><u!>!i!!>},{<$$>}},{{<e!u}!<!!!!!>},<!>},<!!!>!>},<<o!e>}},{<e!}u!!<<!!i,>}},{{<!>},<'aa!!>,{<>}},{{},<$!>!!!>!!ou!!!!!>>},{<!!a!!!!!!i!>},<$!>!,!<!!!>u,!>ai$!>},<'!!>,{{{<u!!!!'$o$!{>},{}}}}},{{{},{<!>,<<!>,<}'!!{'{!a,>}}}},{{<<i>},{{},{}},{<!>,<!!!e!!<!aa>,<a'<>}},{{{<!!'>},{<o}'!!!>,!>i{e>,<<!u}<<<!!!!,<>}},{{},{<!!oo!!!!!>!!!>!>},<!>{i!<!!$!>,<}io!>},<!!!>>,<$$$oe$>}},{}}},{{{{}},{{<'>},<,{ua>}},{{<!>},<!!o!!o!>,<!>},<,!a<!>},<ee}$!!!>},<!>},<o!{<>,{}}},{{<!!>,<'!{>},{<'!>,<!!!>!>,<}{o!!!>iu!>},<'}!!i!!!>>,{<!!'!>,<>}},{{{},{}},{{<$,!i>,<!!o}u<>}},{{{{{<!>},<eo!!$e{ii!<{!>!!!>,<>}},<!!!>},<!!<!!!>>}}}}}}},{{{{{{{}}},{},{<{!'>,<!!!>}e>}},{<e}>,<!!!eoo!e'<!!e!!!!!>!!}o{o!!,'eia>}},{{{<!>,<ee>}},{<!!!!!>e!>!!!>},<>,{{<u!!!>}o<>}}},{{<<<<!>,<'<o'{!!!><!>},<,!u>},{{},{<}>}},{{<{!!$$,>}}}}},{{{{{}},{<a!!!>{!!ao$!><{u!{!!!>e!>,<!!!>},<!!!!}e>},{{<!!u$eu}'ei<!!!!}ue'!>,<<!!!>!!>},<i!>},<<o!>!>,<!!!>},<!>>}},{{{{{<!!!>$!!!!!!!!>},<!!!>'!!!!{!>,<!>i!>},<!>,<!>aeo!>,<>}},{<{,{o!><{o!><!>e'''!!u!!i,!,>}},{<!>,<!>},<!!!!}!>,<!>>}},{{{<!>},<!o{,!!ao!!u!!!>},<>}},{{<$}!>,<<!!!>!i!>},<i!>i>},{}},{{{{<$e!!!>!>,<i!>,<o$'!>},<!>,<{!!!>},<}!!,'!<!>},<>}},{{<e!>ai!>},<$'ia!!!>o!>,<>}},{<!!i!>,<u$>}},{{<>},<a!<a!!!>!,$,<,eu>}}}},{{{<<<!,$o<,'!'o!>},<!>>},{<!!,<'oi!o!>},<ae<a$!>{a!>},<!!{}>,<!!oouo{!!>}},{<}!!!>io!eoa'o$!!o!!i,u<{>}},{{{<}!>,<auiu'i}>}},{<!!!>{i!!i!>!!!>!ue$i!!e>,{}}}},{{{{{},{<'{>}},<ee!!!>!>o!>,<a!a!{a>},{{<!!!>},<>},{<,!>!>},<!!$!!!>},<!aa!!!>,<!!<u$>,<!>!<u'e!!!>!!!>u!!!>,<!!!>e}<}i<!!!>>}},{{{{<{u{!!}ai'!>},<!!>}},{{<<$e}!!!>'!>,<{,!!!!!>$<!>,<!>},<!!<>}}}}},{{{<!!i!!}!>u!uo'u!!a!>{!>,<>}}}},{{{{{<u!!<,!!!>e}!!!!!!i!>>},<!!!>{o>}}},{{{<'!!!>'oe,!$!!uo'<!>i!!!>},<!'i$i$>,{{<,>}}},{{<>},<!!!>{!!!!!!!>}iuo!!a}e!>,<i!>},<u>}},{{{{}}},{<oa$$o!!!!!>,<<!>,<''!>,<}!!$i{<>,<}a<!>,<<{i,i!>,<u!>>},{{{<{!iie<!>!!!!>},{<!o'!,$'a'}o{uo!$$a<!!!>!!!>!e>,{<!!!>!!!>o<,!>},<!>},<a>}}}}},{{{{{{<<!>},<!>,<a<o>}}}}},{{{{{<!!!>{e!>,<!>},<!{!$o!!{>},<!>,<!!>},{}},{<{'!!!><ee}!!!!!!>,<}e>}},{}},{{{<!>},<!!!>,!>!>},<<!>,<!!}e!!!>},<>},{{<<!o!>,<!>!>},<o!>,<!!oia!'!>!!$!uo>},<!>{o!!!>!o!!}!>},<!>},<<o!!i!!!>$!>!>},<!i}>}},{{<},$u}}!!!>,<iu!!'>},<>},{{},<!!>}}},{{<!>,<!>!!!>},<!!ae>,<<!}$e!>,<!ea$!!}!!ea!>{>},{{{}},{{<'!>},<{e!!!>!>},<!!!!!>ui'!!!!!>},<u'!>,<!o!!!>u<>}},{{<!>},<a!!!>{>},{<!!io>}}},{<!>,<i}!>!>},<}}u!>},<e,e>}}}}},{{{{{<!!!!!>},<uu!>e<!!!o>},{<!!{a!>,'!>},<,!>!!a>}},{{},<!ii$}!e!>,<e!>},<'!>ei!>,<{!!$!>!>,<'<>},{<o!!,a}eu'>,{<e!i{io!!!>!>,<}!>},<!}!!!>!>>}}},{{{{<$!>,<'o!>},<}$!}!!!eu<u>}},{<!!!>!i$<eu$'<!>},<!>,<<!>>}}},{{{{<!'a<,}!>!>,<!>,<i!>>},<!>u!!!>}{a<$,o'eu'!>!!!>u!!!!i>},{<<!>},<!>'a!!!><!>,<{!>},<!!!!i<a$e>},{{{<{u},!>}!!<!!!''!<!>,<o!>{>},<u!!!>,<<$!>,<''!>},<>}}},{{<o!!!!!>},<>,<!>!!u>},{<a}!>},<u!!!!<!>!!!>$$!>i>,<!>},<!>},<!>},<{!!<!>},<}$!!o{a>},{{<'i!!!>u}a!<!>},<o,!!!>'i!>!!'>}}}}},{{{{<!>>}},{{{{{<!>},<i!>},<!>,<ai,!!!i!!!!{!>,<{u'!>}>}}},{{},<e}uo!>,<}>},{{<!!o!!!>!!a!!!>!!i!!!u<$!>,<i$!!!!!!!>,<!!!>!!u>,{{<!>,<iae!>,<,!>},<au<!u!>},<u!!!>'>}}},{{{{<oe!>!>},<'!!!!$!!!><a!,<{i!!u!!{u>},<i}!>$!>},<'o>},{<}'$!>},<''!!!>!>$ia{!!!>!!<u>}},{{{<!!!!!!$'!>},<o!!!>},<>}},{<'!!!>i!>},<!!!>!>!>},<a$!'>}},{<!!}}u>}},{{<!i,!!!>,<!!!>}!!!!,uo!>},<!>},<!!!>!!!>'<!!}!!i>}}}}}},{{{<a!>},<!!!$o,u!>},<}!>},<e,>}},{<>},{{<,!>},<$}!>},<!!!!{}!!!>},<i!!,!!!>,<!!'<!>a},>},{{{<a!!!>},e!!!!a!i!!'!!!>,<,$,!!!>}!!!>u!!!>e>}}}}}},{{{{{<!!,i!'!>u>,{<i!!!!!e!>},<$>}},<,ai!!!>!oi>},{{<'oe!!$a,{!>},<}ea!>!!o!!!>o>},{}},{<'u$}{>,<'o!a!!<i<e!>,!!!>{>}}},{{{<e!!!>{!!!>!>,<{!!!!!>$,!!'>},{{<!>!!!>!>,<e!>},<<oa!ei!!i!!!>!!!>},<!!u!!{!!!>}!>,<!>>}},{{{<}{<!!!>oea!!''!>,<>}}}},{<}!!!>,<'!>,<a!>!,!!!>o$!i>}},{{{},{<}!>,<{<ai$>,{}}}}},{{{{{{<aiu!!!>>}},{{{}},<!!!>$!>},<!!!>},<<}!>!!!>a!!{i<!>},<>}}}},{{{<{},'!>,<}!<}>},<a!!$!!<$<a>},{{}},{<!!$'!>},<!>,<!!!>}!>,<<!!!>!><!{<e!!a!!}>}},{{{{{}}},{{<o!!},$!!!,!!!u!>},<i!!!!!!!>}ou>}}},{{},{<<!>,<'!>!!!>$!!}o<i!>!!{a!>,<'>},{{<!!!!!ei!>,<!>,!>!>,<!>,ao!!<!!!!!!!!$o!!u<i>},{}}},{{{{<a!!<,!!euie!!!!!>,<a!>},<!!!>e!>},<i'e>},{{<!'iu<e}}}!>,<u!>},<$!!!>!>,<!!e<<>},<!>,<!!$!!$!>},<e!>e!!e'a>}},{}}}},{{{}}}},{{{{{{<!>,<{<{''>}}}},{{{<u!!uo!>,<i'o'>}}}},{{{{<ue>},<!!!>!,!i!>},<!>,<!>},<'!>!>},<!>,<!>,<e!>},<!!!>e!>},<<>},{{{{}},{<}a!>},<ei<!>,<iu!>!>a{!><!!o>,{}}},{}},{{}}}}}}},{{{{{{}},<!>,<o'}e!>'''!>,<!!$$>},{{},{<!!!>!>,!>,<'{u!>,<o{<o!>u!>'>}}},{{<!>},<!>},<,ooo!!!>!>,<'!i!>!!!!!>{!>>}}},{{<!>eo'}$!>},<,!>,<$!>},<!>,<!>a!>,<o!>,<$>,{}},{{<!!!o!!a!!!>!!{!!a<{!>!!!>!>}{>,<!!a$!!!!!>>},<i!!!>e{<o<e,'!!u>}},{{{<!>!>eo!a$ii{i<'!!!!!>!>,<$!>,<e!,>,<!!<!>!!!!!>},<u,<e!>},<!>,<>},{<>}},{<!!oo,u!>,<u!>},<e<$a!!!>$>,{<}i{a'>}}}},{{{{<$oi>,{{<{{i!>!!!>!!!i!>'aai!>,<>}}}}},{{{{{{<e'!>,<!!!>,!!!>,<a!!}!>},<!>},<$!>,<!>>,<,u}!!!>>},{{{<!!!>>},{<<!>},<ie!!{iui!>,<,!!!>!!!>>}},{<,}$}!>},<!!${{!!!!,a!>},<!>$ou$'>,<}!o!!!>!i!!oo!>,<!!<,$!aa,!u!!a!!>}},{<o{!!o{u!!!><!'}u{>}}},{<!>,<!>!!{!!!>ooo!>!>>}},{<$!!!><!>},<!!!e!!!!a{<>,<!!!>e!>!!!>},<!!!>},<$!!!>!><!!!>{!!!>!>>}},{{{{<$!!$!!u!>},<$aa,<!!!!!>>}},{<a,,$!a!{,a!>,!>,<>,<iio$a'>}},{{{{<!e!>,<e!o!>},<!>,<$!!e!!!>,<!a!>},<,>},{<!>},<{i!!o!>},<'a!>},<>}}},{{<o!>},<!e!!!>!>u'>},<!!,!<!!{o!!!>}!>},<,!!ee}$u<!!>},{{<!!!>!,ioe''u,$,!>,<>}}},{{{{<!>,<!!!>!>,<,!!!!io!>!>,<o<!>},<,i!!!>>},{<!>,<<e<${{}o{u!>},<a>}},{}},{{<!,eu!!!>}!!u!i!!},e!!!!u!!<i}>},<}!!<,{,i!>,<{e<}'!>},<a!>},<!>,<}$$>}}},{{<<,>,<!}e!!!>ie$u<i!!'euo!!{!>,<>},{{<$o!}!!}}o!}!!!>au!!,>}}},{{{<$!>},<!>},<io!>,<$e!,!>,<!!!>!!!i!!$!>}>,<!!!>!!!!a!!ao!>a,$i!>,<>},{{<!!!>,<!>,<{i>},<a}{i!>!>,<!!!e,!>},<!!!>o,>},{{{{<,!!!>$!!a$'!}i<>}},{<o'},'ioe!>,<!>'!o!>,<<i>,<e,'!!!>!>,<!!,!>!!,}io'>}},{{<i!!!>aaua<'}$!!i!{>}},{{<o$!>,<,!!a}'!!}!!!>},<'ea!!ua!>}>},{}}}},{{{},<,${u!>},<!>>},{{{},{}},<o{}!ioe!>,<$!>!>},<$e!!!>>},{{{<!{!>!>},<i}a>},<!>},<<!>,<$$e$>}}},{{<o>,{}}}}},{{{{{<!>},<!!!!!>!!!>'!>!!u$!!'}!!!e!>},<!,>}},{},{{<}e!>!!!!!!!>,!!!>!!!>a$>}}}},{{{{<!!!u!!${'}o,<$>,{}}},{{}},{{{{<!<!>},<oo,,ie!>,<a{>},{<}u!!{{<o,o,'!{!!${,}a}!>},<>}},{{<o!ia!,>},{}},{<<}!!a${!,>}},{{{{<{{$!>},<aoau!,$>},<'!!!>a$ou!>,<,!>!>!!}{,>},{{<,!!!>},<u!!'!!!>!>!!!>!!!>{!!u!!!>!>,<!>,<u!>,<!>,<,}>},{<!,!!!>ue!{{{!!,!>,<}>}}},{{{<,!>},<o!><!!!>}!>,<!>},<i!!>,{{{},{}},{<!>!u!>},<!u!>,<!!!>>}}},{{{}},{{<'!>},<$!!!>!!!>u$!o!>,<$!!!>eaa>,<io>}}},{{<!>!!$}{!!i{!!!>>,{}},{{<!!!>$'o!!!>i!>,<!u,a'!!}!ue>},<!!!>o!$!o'!>},<u!!'{ou<!>},<,!!}>}}},{{},{{<!'!>},<<!>},<<<'e}u>},{<}!!!>!u,{$$!>},<e!e>,{{{<{i!',!!'>,{<!!'>,<!>,<!!!!!>ei!>,<!>,<,!>,<>}},{<>}},{{<!'!>!!!>}<'!!e!>!!oa,!>>}}}}}}},{{{{<}!>,<'!>!>},<$!!$<o{}}>},{<{i}>}},{{{{<!>},<!!i!!<!!'{!!!!!>},<>}}},{{<i!>u!>o'<!>,<!!u!!!i,{!!o<>,<!><ue}}'ao>},{<i!,'!>>,{<a!>},<!>},<!!!ae!>},<!>{!>,<i!>!>,<,!>>,<!!!<>}}}}},{{<!!!>u!!!>e!!'!e'>,{}},{<i!!!>a'!!!!ae>,<eu$!i$!>,<!!}!!>},{{<ui<!>!e'>},{{<!!u$!!>}}}},{{{<!!ui!!!>$!<!!!>,{<!!!>},<<!!!>>,{}},<!>,<a!!e!!i{!>!!!>'!!!><!!!>,<<'a>},{{<>}}},{{<<aa!!'e!!!!!!ei$!{a>,<!<$e$uo${!>u$'au!!!!!>},<'>},{{{<o,ae!!!>a!>,}!!{'o,!>},<!>,<ie>}}},{}}}},{{<e},e!>,<!!'!!!!ia'a>},{{<u!>,<{<!!i!!!>},<!>},<>,{<e!!!<}{u!'!>,<,!>,<>}}},{<aa!!u!!!>!>},<$'>,<<'o<!}i{!ou!>},<!>,<}!>},<>}}},{{{{{{{{{<!!!>ee,<e!!u!>!e!!'>},<u!e!!!!!!!!o,a!!e!>>},{<u!!$>}}},{<>}},{{<{!>,<!>,<uu>,{<!>},<!!!>!>},<!>,<!!!o!><!!!>!>,<>}},{<'!!ee{!!,!!!>}>,<<!o$}>},{{{},<auo!!!>>},{{{<$!!e>}},<!!!>io!>},<}!>},<!!'!>e!!!>'',!>au,i>}}},{{},{<!!$!>},<>,<!!!>o!,e<,<'>},{{<{!!ie!o<}!>},<!>},<$!>!>!!o!>},<>},<!!!i!!u!!}<!!$!>},<<,!!u}!>},<u!>,<!!e<o>}}},{<e>,{}}},{<!$!!{'u>,{}}},{<u'e>,<'{$!>},<u}{$!u!!!!'}!!!>},<>}}},{{{{<!>},<!>o,,o!!!!<!>},<$i!>!>!>,<'>,{}},{{},<!!!!$}!!!>!!!>!!!!<o<!>},<!>},<>}},{{{{<!>},<!i!,!!!!{!!$$}!!a<e<>,{<!!!>u>}},{<{,{i'!i!!!>o{!!i!>,<},!!!>},<!>},<<!!,!!!>>,<!><!u{i!!!!o>}}},{<!!!>'!>,<u!>},<>,{<a$o!!i!>!!,}'!><'{{i'!!!><$>}},{<!!}a}!>!!a!><i,>,{}}},{{{<!a!!<!!!!!!!>,,!!!!!>!>},<a'>,<o!!!>$'{!>,<${!!!!i'}!!{}>}},{},{<!!}{<<i$!!u>,{{<<!!!><ia!!!!}!}u!<}$u!>,<!!!>!!!>>},<!>},<!eu!>,<!>},<>}}},{}},{{{},{}},{{<,u!!'!!o{!e!>oa<o!>,<!!<'!!'>,<{!>!!ae>},{{{<!>!>,<!>!!$!!!>>}},{<a!>!{{a{!!!>!!!!!!<$!>,<>},{{},{{{<<!!!>>},{{<,u!>},<e!!!!!>!!!!!!!>},<oo!,>}}},{{<a!!!>$!>,<!>},<i!>,<!!!>!>},<!>},<<!ao{!!$!!o!!,!!!!!><>},<i<ui,!>,<a>},{{<aa'i!>,<!!,'!!!>!$>},{<>}}},{{{<i!>},<{<oo'!!a<!!!>e!>o!i,!!}$>,{<>}},{<!>{!!e>}},{}}}}},{{{{{{<!!!>a>},{{<u'e>}}},{{<}!!!>'u!}<{!!!>},<}!>},<}>}},{<'$!!!!!!e{{'ie>}},{{{{{<!!!>!}o!>e>}}}},<e}io{{,{e<!>,<,>}},{<{'i!>},<o'>,<a!!!{}{e!!!>$!<,!!>}},{{<!o!!<!!!>e!>i!{,!!{a!>,<>}},{{{<u!!o!>},<!>!!<i!!!>$>}},{<{!ie!>},<,!>!!!>!!!>a'u!>,<!!u,>}}},{{{{<!!!>}{{{!!!>{oi!!eae<!!!>>}},{<,!a!!'au!>,<!>,<!>},<!uo!>},<,,aeii'>,{{},<!!ee!>},<!>},<o'>}},{<e!!a${ee,>}},{{{{<iaeu!!!>!!!>},<!a!>,<!$$u!>,<'}!!<>},{<u!!!!!!a,>}},{{<!!eoo'>},{<'!!!>{!>},<e!!!>!!!>!>},<!!a{>}},{{<au<!!!!a>}}},{<,i!>>}}}}}},{{{{<!!!!!{<!>},<!!!>au!>!>},<!>},<u>},<o'!!!>!!!>!>},<!>!!!>',,'u!o,!!i!!!!!>},<>}},{{<i$ao,i!!!!a!!!>}!!!>,>,{<}>}},{{<!!'o!{<'!>,<}o!!u!>},<,>},{<!'}>}},{{},{{<!'!>!!$a$>}}}},{{{<!>!!{!'!}!>},<>}},{<{!a!!!!!>!>},<!!'!!u>,{<a$!!{>}},{}}},{{{{<ua'e!>uo'!!!>${!>},<<>,<{o!>},<iao!!!!>},{},{{{{<,!>!!!!io!>},<!>!>},<{!<!!!>a!!!>!>},<iu>},{<,!!!>$,}'o!>},<e{!>!!oeie!!ui$>}},<'!!!!!!!>!>},<$,u>},{{<e!!!>!!!>,<'e!!,}e!!a!>},<!!!!!,{!>,<{>},{<!i!!!>!!,!>}!>,<!!!!!>!!e!!!!!$!>i'ea{e>}},{{{<a$'!!a}<e!>'$e!!!>>,<!!u!!i<>}},{{{{{{},{}},{<!>},<ua{!!!>!!>}},{<ao,!!!><!!eaao!!,!>e>,{}},{<!>,<,!!$$!>!>u,!>},<!!eoa!$>,<a,u{!!{,>}}},{{<!>},<!u!>},<i>},{<ee{>}}}}}},{{{{{},<i$!>,<uou>},{}},{<{>,{{<!''!!$!>,<!!!!!!}u!a!'}>}}}},{{{{<!!,ia!!!!!>},<!>},<'{>},{<>,{}}}}},{}},{{{{<$<!!!>},<!'!>e,u!>!!!>!!<{u'!>},<!!!>{>}},<,!!u!!!>!!!>},<$!!''u<a<<!>,<$'!!!>>},{},{<i{!>!!!!{o,e!!,}!!{!!!!!>},<!!}!!!!!<,!!}{>}},{{{{{},{{<i{!!{{a,!!o<!$,!>},<u!!>,<!>,<!>},<}!!}!!!>$a$!>},<e<'!!>},{{<!!oo!!!>!>},<!!!>!>},<!!'!>},<,!!'{!a'!!oa$!>},<e>}}}}},{{{<!!!>{>,{}},{{{<}!!o!!!>},<,auueu,'ie>}},<!>!!<o!!uu<!>,<!>!!!>i!>},<o}a>}},{{{{<!>!o$a!!i!>},<,'{a>,<!i}!!!!!>{>},{}},{{},<>},{{{<!!!>,<!!!>},<ia${uu>,{{<e$e!>,<!!}u,>}}},{<,!!,!>o,a!>},<!>e'{e!!!$!>},<<a>,{{<!!<!>},<'$>},{<!!i}{!!u!,!!}!}!{$!!!>a>}}},{{},{{<'!}!!!}{<!>,<<!>'!!>}}}},{{{{{{},{<!>,<!!}!>},<'eoo{ue!>,<$<!>},<>}}},{<!!!!${>}},<>},{{<{!!{o!>},<u$!!!>,<,<<<<!o!i!>,<>},{{}}},{<>}},{{<,i}!!}{eu!$o!,>}}}},{{<'',!>,<'>},{<$io!!!>o<ae!!!!!>!!}e>,{<!!!>},<>}}},{<}u!>,<$!>,<!!!>>,{<,u,!<}!$!{!>},<!>,<>}}},{}},{{<!>},<!!!>{ee!!!>},<<,!!}!!!>u!!}{a>},{}},{{{{<{{!>},<>},{<u<!!o<,a!!!>>}},{<a!o!!i}>}}}}}},{{{{},<a>},{{<!>!!i!!o>,{}}}},{{{}}}}}},{{{},{{<!!!!!>ui,i!!>,{{<}oi!!{e!>,<{!>},<!!!>!>,<uu!,'!u$>}}},<!'!>!}ou!>!$!>,<!>$a!>,<'!!!<!!!>a>},{{<!!{!!!!!!uae,}io!!!><,!!!>'o$>},{<!!i!>,<{e'{}i<i,}!!'!!ao,'u>}}}}},{{{{},{<>,{}}},{<!'!!{e$<!!i!!!>!!!>},<>},{{<e<o!}'$!!!!!>}!!,i}o>,{{<!>},<ieie$!>,<o!!!>!>}a!!!>>}}}}},{{<<!!!!!!!><!'o!!!>!!!>!>'a$oo!>>},{<>,<<!!oou}!!<<!i!!!!!!$!!!>!,!!!>$!>$!>},<}>},{<!>},<!!<<{!<>}}},{{{<,}a{!><!{!>},<'>,<!!}!>,<!>},<o}!!uaa!>{o!!!>,<!!$<!>>},{{<o>}}},{{{{},{}},{{{{<!$!>e{>}},{{},<>}},<!>,<!$<o!!!!!>!!!>i>}},{{{{<!>e<a!!!!},iui}i!>!!!>>}},{{<!!!>},<!!!>!!!!!>{!!!,<}a!>!e,!!!>!!!!o!!!>!>,<>},{<o!>},<!>,<!>},<!!{!!{<u!!!>},<}e!!!>},<>,{<<>}},{<e$!!eae}!}$>}},{{<,<!!$!!a!!o>},<!!!!!>>}},{{{<!>},<!>},<!>{u,e,>},<>},<>}}},{{{<!!{!$!>},<o!>>}}},{{<>,<,!!!>>},{<!!u!!!i!!!>aooi>,{<!'{o!{$!!!>!!!>,<u!!!!!>!ea!>},<!'!>>}}}}},{{{{{<>},{<!!$$!{>}},{{{<}!!<au'e!!uo!!!o!'}!!!!!<ui}o!>,<>},<'!!o{,!!,i{$!!u<!>,<!i!!!>!>,<!>!i>}}},{{<,!!!>'!!!>,<<!<!!','!>},<!>},<!>},<>,{<!}<!!$$>}},{{{<!!ae!>!!!>!>},<!>},<{!!!!!>!!'{i<!>,<!>,<a'!>>},<!>!>},<!!!>,<$!>},<'a!!a!!ou!!!>,<}>}},{{{{{{{<a>},{<$!>ooe!>},<}!e!!,<i,!!!>a!o!>i>,{}}},{{<aou>}}},{{<<!aii'}<>},{<,u!!!>!!!>,<u>}}},{{<!>},<a>,{}}},{}},{{<ieao!>},<{e,i!!!>}!>,<}i>},<!!!>,<!!!>,o>}}}},{}}}}}"
	S score=0,inGarbage=0,total=0,garbage=0
	S l=$L(in) F i=1:1:l {
		S c = $E(in,i)
		If c="!" { S i=i+1 }
		ElseIf inGarbage=1 { If c=">" { S inGarbage=0 } Else { S garbage=garbage+1 } }
		ElseIf c="<" { S inGarbage=1 }
		ElseIf c="{" { S score = score+1 }
		ElseIf c="}" { S total = total+score, score = score-1 }
	}
	W score,!,total
	Q
	
	// 10.12.2017
19(in)	// Knot Hash
	;S in = "129,154,49,198,200,133,97,254,41,6,2,1,255,0,191,108"
	N i,j
	F i=1:1:$L(in) S $Li(in2,i) = $A($E(in,i))
	S in = in2 _ $LB(17, 31, 73, 47, 23)
	S list = "" F i=0:1:255 S $Li(list,i+1)=i
	S pos = 1, skip=0
	
	F round = 1:1:64 {	
		S ptr=0 While $ListNext(in,ptr,length) {
			// Kopie erstellen
			S end = pos + length - 1
			S copy=""
			If end>256 { 
				S end = end - 256
				S $Li(copy,1,length) = $Li(list,pos,256)_$Li(list,1,end)			
			}
			Else {
				S $Li(copy,1,length) = $Li(list,pos,end)
			}
			
			S ptr2=0 While $ListNext(copy,ptr2,new) {
				S $Li(list,end) = new
				S end = end-1
				S:end=0 end=256
			}		
			
			S pos = pos + length + skip
			S skip = skip+1
			While pos>256 { S pos = pos-256 }
		}
	}
	// Sparse Hash to Dense Hash
	S hex = ""
	F i = 0:1:15 {
		F j=1:1:16 { S b(j) = $Factor($Li(list,16*i+j)) }
		S bit = $Bitlogic(b(1)^b(2)^b(3)^b(4)^b(5)^b(6)^b(7)^b(8)^b(9)^b(10)^b(11)^b(12)^b(13)^b(14)^b(15)^b(16))
		S number = 0 F b=1:1:8 { S number = number + ($Bit(bit,b) * $ZPOWER(2,b-1)) }
		S $Li(dense,i+1) = number
		// Dense to Hex
		S:number<16 hex = hex_0
		S hex = hex _ $ZHex(number)
	}
	;W !,hex	
	Q hex
	
	// 11.12.2017
21
	// Infinite Hex
	S in = "se,ne,se,ne,n,n,n,n,ne,nw,nw,n,nw,nw,sw,sw,sw,sw,sw,sw,sw,sw,s,sw,sw,sw,ne,sw,sw,s,n,s,s,s,s,nw,s,s,s,s,s,se,s,s,n,s,n,se,se,s,se,s,s,s,se,nw,se,se,se,se,se,ne,se,se,se,se,se,n,se,se,se,ne,se,se,se,se,se,se,n,se,se,ne,ne,ne,n,ne,ne,ne,nw,ne,ne,ne,ne,ne,nw,ne,ne,nw,ne,ne,ne,se,ne,ne,ne,sw,se,sw,ne,n,s,sw,ne,n,n,ne,ne,n,ne,ne,n,n,n,n,n,n,se,sw,ne,n,n,n,ne,n,nw,n,ne,ne,ne,n,n,n,n,n,ne,n,ne,sw,nw,ne,sw,nw,n,n,s,nw,n,n,n,n,n,n,n,nw,s,sw,nw,n,se,se,nw,s,nw,nw,nw,nw,nw,se,n,nw,n,s,sw,n,nw,sw,n,nw,se,nw,n,nw,n,nw,sw,n,nw,ne,se,n,nw,ne,nw,nw,se,n,n,nw,nw,se,n,nw,sw,nw,n,n,nw,nw,s,nw,ne,nw,nw,nw,ne,nw,se,n,nw,nw,sw,nw,sw,nw,nw,se,sw,sw,nw,s,nw,nw,nw,nw,sw,n,ne,nw,s,nw,nw,sw,nw,nw,sw,s,nw,nw,nw,se,nw,nw,sw,sw,nw,se,ne,nw,nw,sw,nw,sw,sw,nw,sw,s,sw,sw,sw,sw,nw,n,nw,nw,sw,sw,nw,nw,nw,nw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,nw,sw,sw,se,sw,sw,sw,nw,sw,sw,sw,sw,sw,sw,nw,sw,sw,s,sw,se,sw,sw,sw,ne,n,sw,sw,sw,sw,sw,sw,se,sw,sw,n,sw,sw,s,sw,n,se,s,sw,s,sw,sw,sw,nw,sw,n,s,sw,sw,s,sw,sw,sw,sw,sw,s,sw,sw,s,sw,sw,sw,ne,sw,s,sw,nw,sw,sw,s,s,s,nw,s,s,nw,sw,se,s,s,sw,sw,sw,s,n,s,n,sw,s,sw,s,s,sw,sw,s,s,sw,nw,nw,s,sw,s,sw,se,s,nw,s,se,se,s,sw,s,sw,s,s,sw,sw,s,sw,s,s,sw,s,ne,s,s,n,s,sw,s,s,s,s,s,ne,sw,s,s,s,s,sw,se,se,s,s,s,s,s,nw,s,sw,s,s,se,s,s,se,n,s,s,s,sw,s,s,s,ne,nw,se,ne,s,s,se,nw,s,s,sw,s,ne,s,se,s,sw,s,sw,s,s,s,s,s,se,s,nw,s,s,s,s,s,nw,sw,s,sw,s,se,ne,s,sw,nw,se,se,sw,s,se,se,s,s,s,se,s,s,sw,se,se,se,se,se,se,sw,s,s,sw,s,s,s,se,s,se,se,se,s,se,ne,se,s,s,se,se,se,ne,s,se,s,s,se,se,nw,s,s,se,s,s,s,nw,se,s,se,s,se,se,se,s,s,s,s,s,s,s,s,se,ne,s,s,nw,se,se,se,s,s,se,se,se,s,s,se,s,s,s,se,se,se,se,se,s,se,se,se,n,se,s,nw,se,s,se,n,se,nw,se,se,se,se,s,nw,se,se,se,nw,se,se,se,se,n,se,se,se,s,se,se,se,sw,se,se,se,n,se,se,se,n,n,se,n,se,se,se,se,n,se,se,se,se,sw,nw,se,sw,nw,sw,se,se,se,se,se,s,se,n,se,se,s,se,se,se,ne,se,se,se,se,se,se,ne,se,se,ne,s,se,se,se,se,se,se,se,se,ne,n,se,se,se,ne,nw,se,n,ne,se,nw,sw,s,se,ne,se,se,ne,se,se,se,ne,se,se,ne,se,sw,ne,s,se,se,se,se,se,se,se,ne,s,sw,nw,ne,se,se,ne,se,se,se,ne,ne,s,se,se,ne,n,ne,se,se,se,se,se,ne,se,se,s,se,se,ne,sw,se,se,se,se,se,se,se,se,se,se,se,s,ne,ne,ne,se,nw,ne,ne,se,se,s,se,se,ne,se,se,ne,se,se,se,se,se,ne,se,sw,se,ne,n,nw,nw,se,se,se,sw,n,ne,se,s,s,nw,ne,s,ne,se,ne,ne,ne,ne,ne,se,nw,ne,se,ne,se,ne,ne,ne,se,ne,se,se,ne,se,ne,ne,ne,se,se,ne,ne,se,se,se,ne,se,se,s,ne,se,ne,ne,nw,ne,ne,ne,se,ne,ne,se,ne,sw,ne,ne,nw,ne,sw,se,ne,ne,se,s,s,ne,ne,ne,se,sw,ne,nw,se,ne,se,ne,ne,ne,s,se,se,ne,ne,ne,ne,ne,s,ne,ne,sw,ne,ne,n,ne,nw,se,ne,ne,ne,se,se,se,ne,ne,ne,ne,s,ne,ne,se,se,ne,ne,ne,ne,n,ne,ne,s,ne,ne,ne,sw,ne,se,ne,ne,ne,nw,n,ne,ne,ne,nw,se,ne,n,ne,ne,n,s,ne,ne,ne,se,ne,ne,ne,ne,sw,ne,ne,ne,ne,ne,ne,ne,ne,s,ne,nw,ne,ne,ne,ne,s,ne,ne,ne,n,ne,ne,se,sw,se,ne,ne,ne,ne,se,n,ne,ne,sw,n,ne,n,ne,ne,ne,ne,ne,ne,ne,ne,se,ne,ne,ne,ne,n,ne,se,s,se,ne,nw,ne,ne,ne,ne,s,ne,ne,n,ne,n,ne,ne,ne,ne,ne,ne,ne,n,ne,ne,n,ne,ne,ne,nw,n,ne,n,ne,ne,ne,sw,ne,ne,ne,n,sw,nw,n,sw,ne,n,ne,se,ne,s,ne,nw,ne,nw,ne,ne,ne,ne,n,n,ne,nw,ne,nw,ne,s,n,ne,ne,se,n,s,ne,ne,n,ne,s,s,nw,s,s,ne,n,ne,ne,sw,ne,n,ne,n,n,ne,se,ne,ne,n,n,ne,n,sw,ne,nw,n,ne,n,ne,n,ne,n,n,s,ne,ne,se,nw,ne,ne,ne,ne,se,s,n,ne,ne,n,n,n,ne,ne,n,n,ne,se,n,ne,n,n,n,n,ne,ne,nw,ne,ne,n,ne,se,n,se,s,nw,n,n,n,s,n,n,n,ne,n,ne,ne,n,n,s,sw,ne,ne,ne,n,s,n,n,n,ne,se,ne,n,n,n,n,n,n,ne,ne,n,n,n,ne,ne,n,ne,n,n,s,ne,n,n,n,n,n,nw,n,n,nw,se,n,n,n,ne,n,ne,sw,n,ne,s,n,se,n,n,ne,se,n,nw,ne,ne,n,ne,n,n,n,n,n,ne,n,n,sw,s,n,ne,ne,n,n,n,n,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,n,nw,n,n,ne,s,n,s,n,n,s,ne,n,sw,n,s,ne,ne,n,n,n,n,n,se,ne,n,n,n,n,n,n,n,s,s,n,s,nw,n,s,n,n,n,n,se,ne,se,n,se,n,n,n,s,n,n,n,n,n,n,n,ne,n,n,ne,n,n,ne,sw,nw,n,ne,n,n,n,nw,n,n,n,n,n,n,sw,nw,n,se,n,n,n,n,nw,n,s,nw,n,n,n,se,n,n,n,n,s,n,n,n,n,n,n,n,n,n,nw,n,n,nw,n,n,n,n,n,n,sw,s,n,sw,n,n,n,n,sw,se,ne,n,n,n,n,n,s,n,n,n,n,n,n,ne,n,ne,n,n,n,n,n,n,n,n,n,n,nw,s,n,n,n,nw,n,n,n,n,n,nw,se,n,n,se,n,n,n,s,n,nw,se,n,nw,se,n,n,n,n,n,nw,n,n,ne,n,sw,n,nw,n,n,n,n,n,n,n,n,ne,n,n,n,n,nw,n,n,s,n,n,n,n,n,n,n,nw,nw,ne,n,n,n,n,n,s,n,nw,n,n,nw,ne,n,nw,n,n,nw,n,nw,n,nw,n,sw,sw,n,nw,n,nw,se,sw,n,nw,nw,n,nw,n,n,n,ne,n,nw,n,nw,n,nw,se,n,nw,n,n,n,n,n,ne,n,n,n,s,n,nw,n,n,nw,nw,n,n,n,n,n,n,n,n,n,ne,n,n,n,sw,nw,n,n,n,n,n,nw,sw,s,n,nw,nw,n,n,n,n,se,n,n,n,ne,n,nw,n,n,n,n,n,n,n,n,nw,n,ne,n,nw,n,nw,ne,nw,s,n,nw,n,nw,n,nw,sw,nw,nw,n,n,sw,n,se,nw,ne,n,n,nw,nw,sw,nw,n,sw,se,n,sw,n,n,n,nw,n,se,sw,nw,n,nw,nw,n,nw,n,n,n,nw,nw,s,n,nw,s,sw,n,nw,nw,nw,ne,ne,nw,n,n,n,nw,n,nw,n,nw,nw,nw,nw,nw,nw,nw,nw,n,nw,nw,n,n,nw,n,n,n,ne,sw,nw,nw,nw,n,nw,sw,nw,ne,n,nw,nw,n,n,ne,n,n,nw,nw,nw,n,nw,s,se,nw,n,n,n,nw,s,n,nw,ne,nw,n,n,n,nw,nw,se,n,nw,ne,n,nw,nw,nw,nw,n,nw,nw,nw,nw,nw,n,n,nw,n,n,nw,se,s,n,se,se,nw,nw,nw,nw,se,nw,sw,ne,se,nw,s,nw,nw,nw,nw,n,se,nw,nw,nw,nw,nw,nw,nw,n,ne,nw,s,sw,nw,nw,nw,nw,nw,nw,nw,n,nw,nw,nw,nw,n,nw,nw,sw,nw,nw,se,n,nw,nw,nw,s,nw,nw,nw,n,sw,nw,s,n,nw,nw,nw,nw,s,s,nw,nw,nw,nw,nw,ne,s,n,n,nw,nw,nw,n,nw,n,nw,nw,nw,nw,ne,ne,n,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,n,s,n,nw,nw,nw,nw,nw,nw,nw,ne,nw,nw,nw,nw,sw,nw,nw,nw,nw,ne,n,nw,n,se,nw,nw,n,nw,nw,nw,nw,nw,s,nw,n,nw,n,ne,nw,nw,nw,sw,nw,nw,sw,se,nw,nw,ne,nw,nw,nw,nw,se,nw,nw,nw,nw,nw,nw,nw,nw,n,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,n,nw,nw,n,nw,n,nw,sw,ne,nw,nw,sw,nw,nw,nw,nw,nw,nw,nw,se,s,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,sw,nw,nw,nw,s,nw,nw,se,sw,nw,nw,nw,n,nw,nw,sw,nw,s,nw,nw,n,s,s,se,n,nw,nw,nw,nw,nw,nw,n,sw,nw,sw,nw,nw,nw,nw,sw,ne,nw,nw,ne,se,nw,nw,n,nw,nw,nw,nw,se,nw,nw,sw,ne,nw,nw,nw,nw,sw,ne,nw,nw,sw,s,sw,sw,n,nw,nw,nw,n,nw,nw,nw,nw,nw,nw,nw,nw,sw,ne,sw,nw,sw,nw,nw,nw,sw,nw,se,ne,s,nw,nw,ne,nw,s,nw,sw,sw,sw,nw,nw,nw,nw,n,nw,nw,nw,nw,nw,nw,nw,nw,n,nw,n,nw,nw,ne,s,nw,sw,nw,nw,ne,nw,nw,n,nw,se,sw,nw,sw,nw,nw,nw,nw,nw,nw,nw,sw,n,sw,n,nw,nw,se,nw,nw,nw,nw,nw,nw,nw,ne,sw,n,nw,se,nw,s,nw,n,nw,nw,nw,sw,se,sw,nw,nw,nw,nw,n,nw,sw,n,nw,nw,se,nw,s,nw,sw,nw,nw,sw,ne,nw,se,sw,nw,s,sw,ne,nw,nw,nw,nw,sw,se,nw,sw,nw,sw,ne,sw,nw,sw,nw,sw,sw,nw,nw,nw,nw,nw,sw,nw,nw,n,nw,nw,n,ne,sw,sw,s,sw,nw,s,nw,s,se,n,nw,nw,nw,nw,sw,sw,nw,ne,nw,sw,nw,nw,s,nw,nw,sw,nw,sw,nw,n,se,nw,nw,nw,nw,se,nw,se,nw,sw,nw,nw,nw,nw,sw,nw,s,nw,n,ne,se,sw,n,sw,sw,se,sw,nw,ne,nw,nw,nw,sw,nw,ne,nw,se,nw,sw,nw,sw,nw,nw,se,nw,sw,sw,nw,sw,nw,nw,sw,se,nw,se,sw,nw,sw,sw,sw,nw,sw,nw,sw,sw,sw,nw,sw,sw,sw,se,nw,nw,sw,nw,se,sw,nw,n,sw,nw,nw,sw,nw,nw,nw,sw,sw,ne,sw,nw,sw,se,sw,sw,sw,ne,nw,nw,ne,sw,sw,sw,ne,sw,s,sw,n,sw,sw,nw,sw,se,sw,sw,nw,sw,sw,sw,nw,sw,nw,nw,nw,se,nw,sw,sw,sw,nw,sw,nw,nw,sw,se,sw,n,nw,nw,sw,nw,sw,sw,sw,sw,sw,s,sw,s,s,sw,nw,nw,sw,sw,nw,nw,nw,sw,nw,sw,nw,ne,sw,nw,n,nw,sw,se,nw,sw,se,sw,sw,nw,sw,s,sw,nw,nw,ne,nw,sw,nw,sw,n,nw,sw,sw,sw,nw,ne,nw,sw,se,nw,nw,sw,nw,n,sw,sw,ne,sw,sw,sw,sw,s,nw,nw,sw,nw,sw,s,nw,nw,nw,se,sw,nw,sw,n,sw,nw,nw,ne,sw,sw,nw,nw,sw,se,sw,nw,nw,nw,sw,nw,nw,sw,s,nw,sw,s,sw,sw,sw,n,sw,sw,sw,sw,sw,nw,nw,sw,sw,nw,sw,sw,nw,nw,s,sw,sw,sw,ne,sw,nw,n,sw,sw,sw,sw,se,sw,sw,sw,sw,nw,nw,sw,sw,sw,n,sw,n,sw,nw,s,sw,sw,sw,nw,ne,sw,sw,ne,sw,sw,n,ne,ne,nw,sw,sw,sw,nw,n,nw,ne,sw,nw,sw,nw,sw,n,sw,s,sw,sw,nw,sw,sw,nw,se,sw,sw,n,sw,nw,s,nw,sw,nw,nw,nw,sw,nw,sw,nw,nw,nw,sw,sw,sw,sw,sw,sw,sw,sw,nw,ne,sw,nw,sw,sw,sw,n,sw,sw,sw,sw,ne,nw,sw,ne,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,s,nw,se,se,sw,sw,sw,sw,nw,sw,nw,ne,s,sw,sw,nw,sw,nw,nw,se,n,sw,nw,sw,sw,sw,sw,sw,ne,sw,sw,s,sw,sw,sw,s,nw,se,nw,sw,s,n,sw,s,nw,ne,sw,sw,sw,ne,sw,nw,nw,n,se,sw,nw,n,sw,sw,sw,sw,se,se,sw,sw,sw,n,sw,sw,sw,sw,sw,sw,sw,se,sw,sw,sw,sw,sw,sw,nw,sw,sw,se,s,nw,nw,nw,nw,sw,sw,n,sw,sw,s,ne,sw,nw,sw,sw,sw,sw,sw,n,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,nw,sw,nw,s,n,sw,s,sw,sw,sw,sw,sw,sw,s,nw,ne,sw,sw,sw,sw,sw,sw,nw,s,sw,nw,sw,sw,sw,sw,sw,ne,se,sw,ne,sw,sw,se,s,sw,sw,sw,sw,ne,n,sw,sw,nw,sw,sw,sw,s,n,sw,sw,sw,sw,sw,sw,sw,sw,sw,nw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,nw,sw,sw,nw,s,sw,sw,sw,sw,n,sw,sw,se,sw,sw,sw,ne,sw,sw,sw,sw,sw,sw,sw,sw,nw,ne,sw,n,n,sw,sw,sw,sw,sw,sw,sw,sw,ne,sw,sw,sw,sw,sw,nw,sw,sw,se,sw,nw,sw,ne,sw,s,sw,sw,s,sw,sw,s,sw,s,sw,s,sw,sw,sw,s,sw,sw,sw,sw,ne,sw,sw,n,sw,sw,s,sw,nw,sw,ne,sw,sw,sw,s,sw,se,sw,sw,sw,n,sw,sw,sw,sw,sw,sw,s,s,s,n,n,sw,nw,sw,s,sw,sw,sw,s,sw,sw,sw,s,sw,nw,s,sw,sw,sw,se,sw,sw,sw,sw,sw,sw,sw,s,sw,s,se,ne,sw,sw,sw,sw,sw,sw,s,sw,s,se,nw,n,nw,sw,sw,sw,sw,sw,sw,n,sw,sw,sw,sw,sw,sw,s,sw,sw,sw,se,sw,nw,sw,nw,s,n,s,s,sw,sw,sw,s,se,sw,s,sw,sw,sw,s,se,s,sw,sw,sw,sw,sw,sw,sw,sw,sw,n,sw,nw,sw,se,sw,sw,sw,n,sw,sw,sw,s,sw,sw,sw,sw,sw,sw,s,sw,sw,sw,se,s,sw,ne,ne,sw,sw,sw,sw,s,s,sw,sw,sw,sw,s,se,sw,sw,sw,nw,s,s,se,sw,n,sw,s,sw,n,sw,sw,sw,sw,s,sw,sw,sw,ne,sw,sw,se,sw,se,sw,s,sw,sw,s,n,sw,sw,sw,sw,s,s,s,sw,sw,sw,s,sw,ne,nw,n,sw,nw,sw,sw,sw,sw,s,s,sw,sw,sw,s,sw,sw,s,nw,se,s,sw,sw,sw,sw,sw,sw,se,s,sw,ne,s,se,s,sw,sw,sw,s,sw,sw,sw,sw,s,s,s,s,nw,s,ne,s,se,sw,sw,sw,nw,s,sw,nw,s,sw,s,sw,s,sw,nw,sw,sw,sw,sw,sw,se,sw,sw,s,s,nw,sw,sw,sw,sw,sw,sw,n,sw,nw,n,sw,n,ne,n,n,sw,s,s,sw,s,sw,s,sw,s,sw,sw,s,s,s,s,n,sw,s,sw,ne,n,sw,sw,s,s,sw,sw,sw,s,sw,s,sw,sw,s,s,nw,sw,sw,sw,sw,sw,sw,s,s,sw,s,sw,sw,sw,sw,n,s,s,ne,n,sw,s,sw,s,nw,sw,s,sw,sw,s,s,sw,s,sw,sw,sw,s,sw,nw,s,sw,sw,nw,s,sw,s,sw,sw,sw,s,nw,sw,nw,sw,sw,s,sw,sw,s,sw,sw,s,ne,sw,n,sw,sw,sw,s,sw,sw,sw,sw,ne,sw,n,n,sw,n,sw,s,s,s,sw,sw,s,s,sw,sw,nw,sw,s,s,sw,sw,se,nw,sw,sw,sw,sw,n,s,sw,s,nw,s,s,sw,s,s,n,ne,sw,s,s,s,s,nw,s,s,sw,sw,sw,sw,s,s,s,s,sw,s,s,n,se,s,s,n,s,s,sw,nw,s,s,ne,s,s,s,se,sw,sw,sw,s,sw,sw,se,s,sw,s,n,sw,se,s,n,ne,se,s,se,sw,sw,sw,s,sw,nw,sw,s,sw,sw,sw,s,sw,s,sw,s,se,sw,s,s,s,sw,sw,s,s,sw,s,ne,se,s,sw,s,s,n,sw,s,sw,sw,s,s,nw,s,se,sw,s,se,n,sw,sw,ne,sw,s,sw,sw,sw,se,s,nw,n,sw,ne,se,sw,s,s,sw,s,ne,sw,s,s,sw,s,s,ne,s,s,nw,sw,se,sw,se,sw,s,s,s,sw,sw,s,sw,s,s,sw,ne,s,n,se,sw,s,n,s,sw,s,s,sw,sw,s,se,s,s,s,s,se,sw,sw,s,s,s,s,s,s,se,s,sw,s,s,s,s,se,s,n,s,s,s,sw,n,n,nw,ne,se,s,sw,s,s,sw,sw,s,s,sw,n,s,sw,sw,ne,s,nw,ne,s,s,s,s,s,s,se,s,s,s,sw,s,n,nw,s,s,sw,sw,s,s,s,s,s,ne,s,sw,sw,s,s,sw,s,sw,s,sw,nw,sw,s,s,sw,sw,sw,sw,s,se,s,s,s,sw,s,n,sw,nw,sw,s,s,nw,sw,s,s,sw,s,s,sw,sw,sw,s,s,s,se,s,sw,s,s,sw,s,s,s,s,s,s,s,s,s,nw,s,s,sw,s,s,s,s,ne,s,ne,sw,sw,s,n,sw,s,s,s,sw,s,sw,sw,s,sw,s,sw,sw,sw,ne,s,s,s,s,s,s,s,n,sw,s,ne,s,s,s,sw,s,s,sw,s,s,sw,s,n,s,se,s,se,s,n,s,sw,s,s,s,s,sw,sw,se,sw,ne,sw,sw,s,s,sw,s,s,s,s,s,s,s,sw,ne,s,s,s,s,s,sw,se,s,s,s,sw,s,s,s,s,sw,s,sw,sw,s,s,nw,ne,n,sw,sw,s,nw,s,s,ne,ne,s,s,sw,s,s,s,s,s,ne,s,s,s,s,s,s,s,se,s,s,s,s,s,s,s,n,s,s,sw,s,s,s,s,s,s,s,n,s,s,s,s,s,s,sw,s,s,s,s,n,s,n,s,s,s,s,s,s,s,s,n,s,s,ne,s,s,s,s,s,s,s,n,s,s,s,s,s,s,sw,s,s,s,s,s,s,s,nw,nw,s,s,s,s,se,s,s,ne,s,s,sw,s,sw,s,s,sw,sw,n,s,n,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,n,s,s,ne,s,s,s,sw,s,s,s,s,s,s,s,s,s,s,s,s,n,s,s,s,se,nw,s,s,s,s,s,nw,s,s,s,s,sw,s,s,s,ne,s,s,s,s,s,s,s,s,n,s,s,nw,s,s,se,s,s,s,se,s,s,s,sw,s,s,s,s,s,nw,s,s,se,s,s,s,s,s,sw,sw,s,s,s,s,s,s,s,se,s,s,s,s,se,s,s,s,s,s,s,s,s,s,s,s,s,sw,s,s,s,ne,s,nw,s,s,se,s,se,s,s,s,s,s,s,s,ne,se,sw,sw,se,se,s,s,s,s,s,s,s,s,s,ne,ne,s,s,s,s,nw,s,s,s,s,s,n,sw,s,s,se,se,sw,nw,nw,s,s,s,s,s,s,n,s,s,s,s,s,s,se,s,ne,s,se,s,s,s,s,s,sw,n,ne,n,s,ne,se,se,s,s,s,s,nw,s,s,ne,s,s,s,n,s,s,s,s,s,s,s,s,s,s,s,s,nw,s,s,ne,s,s,n,s,s,se,sw,s,nw,s,sw,ne,s,s,s,ne,s,s,nw,s,s,s,s,s,s,s,s,s,se,nw,s,s,s,se,se,se,s,nw,s,s,s,se,s,s,se,sw,ne,s,se,s,se,s,se,nw,n,se,s,se,ne,sw,s,s,s,s,s,s,s,se,s,s,s,sw,s,s,s,s,nw,s,se,s,s,n,ne,s,s,s,s,se,s,s,s,s,s,se,s,sw,s,s,se,se,s,s,s,s,s,n,ne,nw,s,s,s,se,ne,s,se,se,nw,s,s,s,s,s,s,s,s,s,s,s,s,s,n,s,s,s,n,s,s,se,s,s,se,s,s,s,nw,s,s,s,se,s,sw,sw,s,se,s,se,s,s,s,se,se,s,sw,se,s,s,s,s,s,s,se,s,s,s,se,se,s,s,s,s,s,s,s,s,ne,s,nw,s,s,s,se,se,se,s,se,se,s,s,s,s,nw,s,se,s,se,s,se,se,s,se,sw,s,s,se,se,s,ne,s,ne,nw,s,s,s,s,se,se,se,se,s,se,ne,se,se,s,s,se,ne,nw,s,se,s,s,s,nw,s,s,s,s,nw,s,s,s,s,se,sw,s,sw,s,s,s,se,nw,s,se,sw,s,ne,s,s,s,s,n,se,se,s,nw,s,s,s,se,se,s,s,s,s,se,se,s,s,s,se,s,s,ne,s,s,se,sw,se,n,ne,s,s,s,s,s,s,s,nw,se,se,s,s,s,se,s,se,n,s,sw,s,se,s,se,s,s,s,se,s,n,se,s,se,se,s,se,s,se,s,se,sw,s,se,s,se,s,s,s,s,s,s,s,se,nw,s,s,se,s,se,s,s,s,se,se,se,s,se,sw,s,ne,s,s,se,s,s,s,s,se,n,se,n,sw,s,se,ne,se,s,sw,s,se,sw,s,ne,se,n,se,nw,ne,s,s,se,s,sw,se,se,se,s,s,s,se,s,s,s,s,se,se,se,se,se,s,s,n,s,s,s,s,s,se,s,s,s,s,s,nw,sw,ne,se,se,s,s,se,se,se,se,se,s,s,ne,s,se,se,se,se,s,nw,se,s,s,s,s,s,ne,s,se,se,se,se,s,s,s,se,n,s,se,s,se,se,se,se,s,s,se,se,se,se,se,s,s,se,s,s,sw,se,sw,sw,se,sw,n,s,s,s,n,s,s,se,sw,ne,n,se,s,se,sw,se,s,se,se,s,se,s,s,s,s,se,se,s,s,nw,se,se,se,se,s,s,s,sw,s,se,se,s,se,nw,se,se,se,s,sw,s,s,se,s,s,s,s,se,s,se,s,se,se,s,s,se,se,s,se,ne,se,s,se,se,se,s,s,n,s,se,n,s,s,s,se,se,se,s,s,se,s,n,s,sw,se,se,s,se,se,se,s,s,se,se,n,n,nw,se,n,ne,se,s,se,se,s,se,s,s,n,s,nw,se,s,s,ne,n,ne,se,s,se,sw,se,se,s,s,se,s,se,s,se,n,s,se,se,sw,se,s,s,se,se,sw,s,s,nw,se,s,se,se,ne,se,se,se,se,se,se,s,se,s,n,s,s,se,s,s,se,se,s,nw,s,se,se,se,s,se,s,s,se,se,se,se,se,se,s,se,nw,se,se,s,s,se,s,sw,se,se,s,s,n,n,n,s,s,se,s,nw,se,s,se,s,se,nw,se,s,s,ne,se,n,s,s,s,se,s,n,se,s,s,se,se,se,s,se,se,se,se,n,nw,se,se,se,se,se,s,se,se,s,se,se,se,s,se,s,se,n,s,se,s,se,se,se,s,se,se,se,se,se,se,s,se,se,s,s,se,s,s,sw,se,n,se,s,se,s,se,se,se,se,s,s,se,se,se,sw,se,s,se,s,s,se,se,s,se,se,se,se,n,se,sw,se,se,sw,sw,s,se,sw,s,se,se,s,se,se,sw,s,s,s,se,nw,se,s,s,se,se,se,s,se,se,se,s,n,se,se,se,s,s,se,se,se,sw,se,s,sw,s,se,se,se,s,n,se,s,s,s,s,se,ne,se,sw,s,sw,se,se,se,nw,sw,s,se,se,s,se,se,sw,se,s,s,n,se,se,se,ne,s,s,se,s,s,se,nw,s,se,s,se,se,se,se,se,se,se,s,s,s,s,n,se,se,s,ne,se,se,se,sw,se,s,ne,se,s,se,se,se,se,s,s,se,se,se,s,ne,s,s,se,se,s,se,se,se,se,se,s,se,se,se,se,sw,se,s,se,ne,s,se,se,se,se,s,se,n,n,s,se,se,s,se,s,s,se,se,se,se,ne,sw,se,sw,nw,se,se,se,se,se,se,se,s,se,s,se,s,se,s,s,n,se,se,se,s,se,se,se,se,se,s,se,se,se,nw,se,ne,se,se,se,se,nw,n,se,n,se,s,se,se,s,s,se,n,s,s,nw,se,s,n,sw,se,n,se,se,s,nw,se,se,se,se,se,nw,se,se,se,se,n,se,se,se,se,se,se,s,se,se,se,ne,se,se,se,nw,s,se,s,se,se,ne,se,s,ne,s,se,ne,se,se,se,se,ne,n,se,se,s,se,se,sw,se,s,se,sw,se,se,se,n,se,se,se,se,ne,se,s,sw,se,se,se,s,s,se,se,se,se,se,se,se,se,s,se,se,n,se,se,n,n,se,se,se,s,se,se,se,se,nw,se,se,se,sw,se,se,se,s,se,n,se,se,se,s,se,s,se,s,se,se,se,n,sw,se,se,se,n,se,se,nw,se,se,se,se,se,n,se,se,se,nw,se,se,se,se,se,se,se,se,s,se,ne,se,se,se,se,se,sw,se,nw,se,se,s,nw,se,se,se,se,s,ne,se,se,se,se,s,s,se,n,s,se,nw,s,se,se,se,se,s,ne,ne,se,s,se,s,se,se,se,se,se,nw,se,s,se,se,se,se,se,se,se,se,se,s,se,se,se,ne,nw,se,se,se,se,se,se,se,se,nw,se,se,se,se,se,se,se,se,se,se,nw,se,se,n,se,ne,se,se,se,se,s,s,se,se,se,se,se,se,se,se,se,se,se,se,se,se,nw,n,se,se,se,s,se,se,sw,s,s,se,se,nw,se,se,se,se,ne,sw,se,s,se,se,se,se,s,se,se,se,se,se,s,se,se,se,se,se,se,se,se,sw,se,se,se,se,n,se,se,n,s,se,n,se,se,se,se,se,se,se,se,s,se,se,se,se,se,se,se,se,ne,sw,n,se,se,s,se,se,se,se,se,sw,nw,sw,nw,sw,s,se,nw,n,sw,nw,n,n,n,ne,ne,ne,n,ne,n,ne,sw,se,ne,ne,ne,ne,se,ne,ne,ne,n,se,ne,se,se,n,se,se,se,ne,se,se,n,se,sw,se,ne,se,se,s,se,se,s,s,n,nw,s,sw,n,s,s,ne,s,se,sw,se,sw,sw,sw,sw,ne,sw,se,s,s,sw,nw,s,sw,s,s,s,sw,sw,s,nw,sw,sw,sw,sw,sw,s,sw,sw,sw,sw,sw,sw,nw,sw,nw,nw,s,sw,s,sw,sw,sw,sw,sw,nw,sw,sw,se,sw,sw,sw,sw,ne,nw,nw,nw,nw,sw,nw,se,nw,ne,ne,ne,sw,nw,sw,nw,sw,nw,sw,nw,nw,s,nw,s,nw,n,nw,nw,nw,nw,nw,n,n,s,nw,se,ne,nw,nw,nw,nw,nw,nw,se,sw,n,nw,nw,nw,n,nw,n,nw,sw,se,nw,ne,nw,nw,n,ne,ne,n,nw,ne,nw,n,n,nw,n,nw,nw,n,n,nw,n,s,n,nw,ne,nw,n,nw,n,sw,n,n,n,n,n,nw,n,sw,s,n,n,n,n,n,n,n,n,n,nw,n,se,n,n,s,ne,n,sw,se,n,ne,s,s,n,n,n,n,n,ne,n,n,ne,n,se,s,n,se,sw,ne,sw,s,s,n,ne,n,se,ne,ne,n,ne,ne,n,ne,n,n,sw,nw,ne,n,n,se,ne,ne,s,s,ne,n,s,sw,ne,ne,ne,n,ne,ne,n,ne,ne,n,se,ne,ne,se,ne,ne,ne,ne,nw,ne,sw,n,n,ne,ne,ne,n,se,ne,n,ne,ne,ne,sw,ne,ne,sw,nw,se,ne,ne,ne,ne,ne,n,ne,se,ne,sw,sw,ne,ne,ne,ne,ne,ne,ne,n,ne,ne,se,ne,n,n,se,ne,se,ne,ne,ne,ne,ne,ne,se,ne,ne,ne,ne,ne,s,sw,se,ne,se,ne,se,ne,ne,sw,ne,ne,se,ne,ne,se,ne,se,ne,se,ne,ne,ne,nw,ne,se,se,ne,se,se,se,sw,se,se,ne,se,se,se,ne,se,ne,se,ne,se,se,nw,ne,sw,se,se,se,sw,ne,se,ne,se,se,se,se,sw,se,nw,nw,se,se,se,se,s,nw,se,sw,n,ne,nw,ne,se,se,se,se,ne,s,s,se,se,se,ne,nw,ne,se,se,ne,se,se,se,se,se,se,se,s,se,se,se,se,se,se,s,se,se,se,se,se,se,se,se,se,nw,se,se,se,se,se,se,se,se,se,se,se,se,se,s,ne,se,s,se,se,ne,s,se,ne,se,sw,sw,se,se,s,se,se,se,s,sw,s,s,s,sw,n,s,ne,se,se,s,se,se,se,s,se,se,se,se,se,se,se,s,s,ne,se,se,se,se,nw,n,se,se,se,n,s,se,se,se,se,se,se,s,se,s,ne,s,nw,se,s,se,s,s,n,s,se,se,n,se,s,sw,ne,s,se,s,s,se,s,n,se,s,s,s,se,nw,s,sw,sw,s,s,nw,s,se,s,se,s,se,sw,se,se,s,se,s,se,s,s,s,se,s,nw,nw,sw,se,s,nw,s,s,sw,s,s,s,se,s,se,s,s,se,s,sw,s,n,sw,se,s,s,s,s,nw,se,s,s,s,se,s,s,ne,se,s,se,se,s,s,se,s,s,se,s,n,s,se,s,sw,s,s,s,s,s,s,ne,s,s,ne,s,s,s,s,s,s,s,s,se,sw,s,sw,s,s,sw,s,s,s,s,s,sw,s,ne,nw,s,sw,s,s,s,s,s,s,s,sw,sw,s,nw,s,s,s,se,se,s,sw,s,nw,s,sw,s,s,sw,se,s,se,s,nw,s,s,s,n,s,s,s,n,s,s,ne,nw,n,s,s,s,s,s,s,s,n,s,sw,sw,sw,s,s,s,s,s,s,sw,s,s,s,s,s,s,ne,se,sw,se,s,sw,sw,se,s,s,s,sw,n,sw,s,s,sw,s,s,s,s,sw,nw,s,ne,s,s,s,s,s,s,s,sw,s,sw,sw,s,s,sw,s,sw,s,s,s,s,sw,sw,s,s,s,s,s,sw,sw,s,s,sw,s,nw,s,s,sw,sw,s,nw,ne,sw,s,sw,s,sw,s,s,ne,s,ne,s,sw,s,sw,sw,s,s,s,sw,sw,sw,sw,sw,s,sw,ne,s,s,s,sw,s,n,sw,sw,sw,sw,sw,sw,sw,n,s,sw,nw,sw,sw,sw,n,se,sw,sw,s,sw,n,sw,s,s,s,s,s,s,s,sw,s,sw,sw,se,sw,sw,sw,n,sw,nw,sw,se,s,sw,nw,se,sw,sw,sw,n,sw,se,sw,sw,s,sw,sw,sw,s,s,n,sw,n,sw,sw,sw,sw,sw,s,sw,sw,sw,ne,s,n,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,s,ne,sw,ne,sw,sw,sw,ne,sw,sw,s,se,n,sw,sw,s,n,sw,sw,sw,sw,sw,sw,nw,sw,sw,sw,sw,sw,sw,n,sw,ne,se,sw,nw,s,sw,sw,sw,n,sw,sw,sw,sw,n,sw,sw,sw,ne,sw,se,ne,sw,se,ne,nw,sw,sw,sw,sw,nw,ne,sw,sw,nw,nw,sw,nw,sw,sw,nw,sw,s,n,se,sw,nw,sw,ne,sw,nw,sw,sw,sw,sw,sw,sw,se,se,nw,sw,ne,sw,nw,sw,sw,sw,sw,s,sw,sw,ne,sw,sw,sw,sw,sw,sw,sw,nw,sw,se,sw,sw,nw,n,s,sw,s,sw,sw,sw,ne,sw,nw,se,nw,nw,sw,nw,nw,sw,nw,nw,se,sw,sw,sw,sw,nw,nw,sw,nw,se,sw,sw,nw,ne,sw,sw,sw,se,sw,sw,sw,sw,ne,ne,nw,ne,nw,sw,sw,sw,n,s,nw,n,sw,nw,sw,nw,se,sw,nw,nw,nw,sw,nw,nw,sw,sw,nw,nw,sw,sw,sw,nw,sw,nw,nw,ne,sw,sw,nw,nw,sw,n,se,sw,nw,nw,sw,n,sw,s,sw,sw,nw,nw,sw,nw,se,n,sw,s,sw,sw,nw,nw,sw,nw,nw,sw,sw,sw,sw,nw,nw,sw,nw,nw,sw,nw,sw,sw,nw,se,nw,sw,sw,sw,sw,se,s,sw,nw,n,n,ne,nw,sw,nw,sw,s,sw,sw,sw,nw,s,nw,ne,s,sw,ne,nw,nw,nw,nw,sw,nw,nw,sw,nw,sw,sw,sw,sw,nw,nw,nw,sw,s,sw,nw,nw,sw,nw,sw,nw,nw,s,nw,nw,sw,sw,sw,sw,sw,sw,sw,sw,nw,nw,nw,nw,nw,nw,nw,nw,sw,sw,nw,sw,nw,nw,sw,nw,se,s,sw,nw,nw,nw,nw,nw,nw,nw,sw,nw,nw,sw,sw,s,nw,nw,nw,nw,nw,nw,nw,sw,sw,nw,nw,nw,n,ne,s,sw,s,se,nw,nw,s,nw,nw,nw,sw,s,ne,nw,nw,nw,nw,s,nw,nw,nw,ne,nw,sw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,ne,ne,sw,nw,ne,nw,nw,nw,nw,nw,sw,nw,nw,nw,nw,nw,nw,nw,s,nw,nw,nw,nw,nw,nw,se,sw,nw,n,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,s,s,nw,nw,ne,nw,sw,nw,s,nw,nw,nw,nw,n,nw,sw,nw,nw,nw,nw,nw,nw,ne,nw,nw,nw,nw,nw,nw,nw,ne,nw,sw,nw,nw,nw,nw,nw,nw,nw,nw,n,n,nw,nw,nw,se,s,s,nw,nw,nw,nw,n,nw,nw,nw,sw,se,nw,nw,n,nw,n,nw,nw,se,nw,nw,nw,nw,nw,nw,nw,se,nw,nw,n,nw,nw,nw,se,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,ne,nw,nw,n,nw,nw,ne,nw,nw,n,nw,nw,n,n,nw,n,ne,nw,nw,nw,nw,nw,nw,s,nw,nw,nw,nw,ne,nw,nw,n,nw,ne,n,nw,nw,nw,nw,nw,nw,s,nw,nw,nw,nw,ne,sw,nw,nw,nw,n,nw,nw,nw,nw,n,nw,n,nw,nw,nw,nw,nw,nw,sw,nw,ne,nw,nw,sw,nw,nw,n,nw,nw,nw,s,s,s,nw,nw,nw,nw,n,nw,se,sw,s,nw,nw,nw,sw,n,n,nw,nw,ne,nw,n,se,n,nw,n,nw,nw,nw,n,nw,nw,nw,nw,n,nw,s,n,nw,n,nw,nw,nw,nw,nw,n,ne,nw,sw,nw,n,nw,nw,nw,n,s,nw,n,se,nw,ne,n,nw,nw,nw,n,nw,ne,nw,n,n,nw,n,s,nw,ne,ne,n,n,nw,se,nw,n,s,n,nw,n,n,n,n,n,nw,nw,s,nw,n,nw,nw,n,n,n,se,n,nw,nw,s,n,nw,n,nw,n,nw,nw,n,n,nw,n,n,se,sw,n,n,n,nw,nw,n,nw,nw,n,n,nw,n,se,n,n,n,n,nw,n,sw,n,nw,nw,nw,nw,ne,nw,n,n,n,n,n,n,nw,nw,se,nw,nw,n,n,n,nw,sw,ne,n,nw,n,n,nw,n,se,se,n,n,n,n,n,nw,n,n,n,s,sw,n,n,s,n,sw,n,se,n,nw,nw,se,nw,n,n,nw,sw,nw,n,n,n,ne,n,n,sw,nw,nw,se,nw,n,nw,sw,ne,sw,nw,n,n,nw,nw,nw,nw,nw,se,nw,n,nw,n,n,nw,sw,n,n,nw,nw,se,sw,n,n,n,n,n,n,nw,nw,nw,n,n,ne,se,n,nw,nw,ne,n,nw,n,n,n,sw,se,n,n,nw,nw,nw,n,n,n,n,se,n,ne,n,s,nw,n,n,n,nw,s,se,n,nw,nw,nw,n,n,nw,n,n,n,n,se,nw,n,n,nw,n,n,nw,n,n,n,n,n,n,n,sw,n,n,n,n,n,se,s,n,n,n,n,s,n,n,n,sw,n,n,nw,n,se,sw,n,sw,n,n,n,n,n,n,ne,n,n,nw,n,n,n,n,n,n,n,se,n,n,n,ne,n,n,n,n,n,n,s,n,nw,n,n,n,n,n,n,n,n,ne,n,n,n,n,sw,n,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,sw,n,n,n,n,n,s,n,n,n,n,n,n,sw,se,n,n,n,n,n,n,s,s,n,nw,n,ne,n,n,n,n,ne,sw,n,n,sw,s,n,n,n,n,n,n,sw,n,nw,n,s,n,n,n,ne,sw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,sw,n,sw,n,n,n,s,sw,n,n,n,s,n,ne,n,sw,nw,n,ne,nw,sw,n,n,n,n,n,n,se,nw,n,nw,sw,n,n,n,n,ne,s,n,ne,s,n,n,n,ne,n,n,nw,n,n,n,n,n,n,s,n,n,n,n,n,n,ne,n,n,n,ne,n,n,n,n,nw,nw,n,n,ne,ne,sw,ne,s,n,n,s,s,ne,nw,n,ne,ne,sw,ne,n,n,se,n,n,ne,s,ne,n,n,n,n,n,n,n,n,n,n,ne,n,nw,ne,n,n,se,ne,ne,ne,n,n,s,ne,n,ne,ne,n,s,ne,n,n,ne,n,sw,s,ne,se,n,n,n,nw,n,n,n,ne,ne,n,nw,n,ne,n,n,ne,n,nw,ne,nw,n,n,n,ne,ne,n,ne,sw,n,ne,n,nw,n,n,n,se,n,n,se,n,ne,n,n,ne,nw,ne,n,n,n,ne,n,nw,ne,n,n,sw,ne,n,s,ne,ne,ne,n,sw,n,n,ne,ne,n,ne,ne,n,se,ne,n,ne,n,n,n,nw,ne,n,n,n,ne,se,n,ne,ne,n,n,n,n,n,se,nw,n,nw,n,se,n,s,n,n,ne,ne,ne,ne,ne,ne,n,se,ne,n,s,s,ne,ne,ne,s,nw,n,n,s,s,n,ne,sw,ne,ne,n,n,ne,sw,ne,ne,sw,n,ne,ne,n,n,s,ne,ne,n,s,ne,ne,ne,n,ne,n,n,ne,ne,n,n,n,ne,n,ne,sw,ne,ne,ne,n,ne,sw,ne,s,se,sw,n,sw,ne,ne,ne,s,nw,nw,s,ne,n,sw,ne,se,ne,n,ne,n,s,se,ne,ne,ne,nw,ne,ne,n,ne,sw,ne,ne,ne,ne,sw,n,ne,se,se,sw,n,ne,n,n,ne,ne,ne,ne,ne,n,n,sw,n,se,n,n,n,n,ne,n,se,n,ne,ne,n,n,n,n,n,ne,ne,n,ne,s,s,ne,n,nw,n,se,ne,ne,n,n,ne,n,ne,s,ne,ne,n,n,n,ne,n,ne,n,n,ne,n,n,n,se,sw,n,ne,ne,n,ne,ne,ne,n,ne,ne,ne,se,ne,ne,ne,n,n,s,ne,nw,ne,n,n,ne,ne,ne,ne,ne,nw,ne,n,ne,n,n,ne,ne,ne,ne,ne,ne,ne,ne,ne,n,ne,ne,ne,ne,ne,s,n,ne,n,ne,ne,ne,ne,ne,ne,n,n,ne,ne,ne,ne,ne,ne,n,s,ne,n,ne,n,n,n,ne,ne,ne,ne,se,n,ne,se,ne,n,ne,n,ne,ne,ne,n,ne,ne,ne,ne,ne,ne,s,nw,se,ne,n,ne,ne,ne,n,ne,ne,ne,se,ne,se,n,ne,ne,ne,ne,sw,ne,n,ne,ne,s,ne,sw,n,n,nw,sw,ne,ne,n,ne,ne,ne,ne,ne,ne,nw,ne,se,ne,ne,ne,n,ne,ne,ne,n,s,ne,ne,ne,n,ne,ne,ne,s,ne,n,ne,n,sw,nw,ne,ne,sw,n,n,s,nw,n,se,ne,nw,ne,n,ne,ne,s,s,ne,sw,ne,n,s,n,ne,ne,ne,ne,n,n,ne,ne,ne,s,ne,ne,ne,ne,ne,ne,s,ne,ne,ne,ne,ne,s,ne,ne,ne,ne,ne,ne,ne,ne,n,ne,n,ne,ne,ne,ne,ne,nw,sw,sw,ne,n,n,ne,ne,nw,s,nw,ne,ne,ne,ne,sw,n,ne,n,ne,sw,s,se,ne,ne,ne,se,ne,ne,se,n,ne,ne,ne,n,n,ne,ne,n,ne,n,se,ne,nw,ne,s,ne,ne,ne,n,nw,n,se,ne,ne,ne,nw,n,sw,ne,ne,se,ne,ne,ne,nw,ne,ne,ne,s,n,ne,se,ne,ne,se,n,ne,ne,ne,ne,s,ne,ne,ne,sw,ne,ne,sw,ne,ne,ne,ne,se,n,ne,ne,se,ne,ne"
	S in = $LFS(in)
	S (n,ne,se)=0
	S furthest = 0, away=0
	S ptr = 0 While $ListNext(in,ptr,v) {
		If v="s" { S n = n-1 }
		ElseIf v="n" { S n = n+1 }
		ElseIf v="ne" { S ne = ne+1 }
		ElseIf v="sw" { S ne = ne-1 }
		ElseIf v="se" { S se = se+1 }
		ElseIf v="nw" { S se = se-1 }
		S away = $ZABS(n) + $ZABS($S($ZABS(ne)>$ZABS(se):ne,1:se))
		S:away>furthest furthest=away
	}
	W !," n: "_n
	W !,"ne: "_ne
	W !,"se: "_se
	S away = $ZABS(n) + $ZABS($S($ZABS(ne)>$ZABS(se):ne,1:se))
	W !,away
	Q
	
	// 12.12.2017
23
	// Digital Plumber
	D FileIn(12)
	While 'file.AtEnd {
		S A=file.ReadLine() Continue:A=""
		S A=$Tr(A," ")
		S s = $P(A,"<->",1)
		S r = $P(A,"<->",2)
		
		S P(s)=$LFS(r)
	}
	S groups=0,progs=0
	S x="" F { S x=$O(P(x)) Q:x=""
		If '$D(C(x)) {
			D Travel(x)
			S groups = groups + 1
		}
	}
	W !,"Programme: "_progs
	W !,"Gruppen: "_groups
	Q
Travel(x)	// Travels down the pipes
	N i,list S list = P(x)
	S i=0 While $ListNext(list,i,p) {
		If '$D(C(p)) {
			S progs = progs + 1
			S C(p) = ""
			D Travel(p)
		}
	} 
	Q
	
	// 13.12.2017
25	// Packet Scanner -> Zustandsdiagramm
	D FileIn(13)
	While 'file.AtEnd {
		S A=file.ReadLine() Continue:A=""
		S A=$Tr(A," ")
		S depth = $P(A,":",1)
		S range = $P(A,":",2)
		
		S F(depth)=range
	}
	S last = $O(F(""),-1)	// last layer of Firewall
	
	F delay = 10:1 {
		S severity = 0
		S layer="" F { S layer=$O(F(layer),1,range) Q:layer=""
			S one = range*2 - 2
			If (layer+delay)#one = 0 S severity=1 Q
			;If (layer+delay)#one = 0 S severity = severity+(layer*range) W !,"Hit on layer "_layer
		}
		Q:severity=0
	}
	W !,"Shortest delay: "_delay
	Q


	//14.12.2017
27	// Disk Defrag Used Bits
	S in = "nbysizxe"
	S hc(0)=0,hc(1)=1,hc(2)=1,hc(3)=2,hc(4)=1,hc(5)=2,hc(6)=2,hc(7)=3,hc(8)=1,hc(9)=2,hc("A")=2,hc("B")=3,hc("C")=2,hc("D")=3,hc("E")=3,hc("F")=4
	S used=0
	F i=0:1:127 {
		S hash = $$19(in_"-"_i)
		F j=1:1:32 S used=used+hc($E(hash,j)) ;S bs(i) = $G(bs(i)) _ h2b($E(hash,j)) 
	}
	W used
	Q
	
28	// Disk Defrag Regions
	S in = "nbysizxe"
	F i=0:1:127 {
		S hash = $$19(in_"-"_i)
		F j=0:1:31 { S b=$Factor($ZHEX($E(hash,j+1))) F k=0:1:3 { S bs(i,4*j+k) = $Bit(b,4-k) } }
	}
	// bs(#) = bitstring
	S region=1
	F i=0:1:127 {
		F j=0:1:127 {
			If bs(i,j) {
				S gn = +$G(bs(i,j-1)), gw = +$G(bs(i-1,j))
				If 'gn&&'gw { S region=region+1, bs(i,j)=region, M(region,i,j)="" }
				ElseIf gn&&'gw || (gn=gw) { S bs(i,j)=gn, M(gn,i,j)="" }
				ElseIf 'gn&&gw { S bs(i,j)=gw, M(gw,i,j)="" }
				Else { D SameReg(gn,gw) }
			}			
		}
	}
	S r="" F i=0:1 S r=$O(M(r)) Q:r=""
	W i
	Q
SameReg(a,b)
	S:b<a c=b,b=a,a=c // a=lower region
	S M(b,i,j)=""
	S x="" F { S x=$O(M(b,x)) Q:x=""  S y="" F { S y=$O(M(b,x,y)) Q:y=""  S bs(x,y)=a } }
	M M(a)=M(b) K M(b)
	Q	

	//15.12.2017
29	// Dueling Generators
	S mA = 16807, mB = 48271, mod = 2147483647
	S match = 0, A = 634, B = 301
	F i=1:1:40000000 {
		S A = A*mA#mod, B=B*mB#mod
		S:(A#65536)=(B#65536) match=match+1
	}
	W match
	Q
30
	S mA = 16807, mB = 48271, mod = 2147483647
	S match = 0, A = 634, B = 301
	F i=1:1:5000000 {
		Do { S A = A*mA#mod } While A#4
		Do { S B = B*mB#mod } While B#8
		S:(A#65536)=(B#65536) match=match+1
	}
	W match
	Q
	
	// 16.12.2017
31	S file = ##class(%File).%New("C:\amd\day16.txt")
	D file.Open("RS")
	S A=""
	While 'file.AtEnd {
		S a=file.ReadLine()
		S A = A _ $LFS(a)
	}
	D file.Close()
	F i=1:1:16 S $Li(P,i) = $C($A("a")+i-1)
	S list(0) = P
	
	F gaga=1:1:1000000000 {
		S ptr=0 While $ListNext(A,ptr,m) {
			S c=$E(m),d=$E(m,2,*),e=$P(d,"/",1),f=$P(d,"/",2)
			If c="s" { S P=$Li(P,17-e,16) _ $Li(P,1,16-e) }
			ElseIf c="x" { S t=$Li(P,e+1), $Li(P,e+1)=$Li(P,f+1),$Li(P,f+1)=t }
			ElseIf c="p" { S e=$LF(P,e),f=$LF(P,f) S t=$Li(P,e), $Li(P,e)=$Li(P,f),$Li(P,f)=t }
		}
		S list(gaga) = P
		If P=list(0) W $LTS(list(1000000000#gaga),"") Q
	}
	Q

	// 17.12.2017
33	// Spinlock
	S in = 359
	S buffer = $LB(0), pos = 1
	F i=1:1:2017 {
		S move = in#i
		S pos = pos + move + 1
		S:pos>i pos=pos-i
		S buffer = $Li(buffer,1,pos) _ $LB(i) _ $Li(buffer,pos+1,*)
	}
	W $Li(buffer,pos+2)
	Q
34	// Spinlock
	S in = 359
	S pos = 1
	F i=1:1:50000000 {
		S move = in#i
		S pos = pos + move + 1
		S:pos>i pos=pos-i
		S:pos=1 afterZero=i
	}
	W afterZero
	Q	
